services:
  traefik:
    image: "traefik:latest"
    restart: always
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=${SSL_EMAIL}"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - n8n-network

  n8n:
    build:
      context: .
      dockerfile: n8n.Dockerfile
    restart: always
    container_name: n8n
    ports:
      - "127.0.0.1:5678:5678"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.${DOMAIN_NAME}`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls.certresolver=mytlschallenge"
      - "traefik.http.middlewares.redirect-scheme.redirectscheme.scheme=https"
      - "traefik.http.routers.n8n-web.rule=Host(`n8n.${DOMAIN_NAME}`)"
      - "traefik.http.routers.n8n-web.entrypoints=web"
      - "traefik.http.routers.n8n-web.middlewares=redirect-scheme"
    environment:
      - N8N_HOST=localhost
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      # Variáveis para ambiente de produção (descomente e ajuste quando usar DNS)
      # - N8N_HOST=n8n.${DOMAIN_NAME}
      # - N8N_PROTOCOL=https
      # - WEBHOOK_URL=https://n8n.${DOMAIN_NAME}/
      - N8N_PORT=5678
      - NODE_ENV=production
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - NODE_FUNCTION_ALLOW_BUILTIN=fs
      - N8N_EXECUTE_COMMAND_ENABLED=true
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - n8n_data:/home/node/.n8n
      - ${PWD}/local-files:/files
    networks:
      - n8n-network
    depends_on:
      - postgres-db


  postgres-db:
    image: postgres:13-alpine
    container_name: postgres-db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_db_data:/var/lib/postgresql/data
    networks:
      - n8n-network

  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    networks:
      - n8n-network

volumes:
  traefik_data:
  n8n_data:
  postgres_db_data:
  minio_data:
  local-files:

networks:
  n8n-network:
    driver: bridge